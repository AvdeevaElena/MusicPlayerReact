{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\ReactMusic\\\\reactmusic\\\\src\\\\companents\\\\MusicList.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport s from './styles.css';\nconst goeasy = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\";\nconst dreams = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3\";\nconst chillout = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-10.mp3\";\nconst twistter = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-13.mp3\";\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\n\nfunction getTime(time) {\n  if (!isNaN(time)) {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }\n}\n\nclass MusicList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentSong: null,\n      music: \"stopped\",\n      currentTime: null,\n      duration: null\n    };\n  }\n\n  requestData() {\n    const self = this;\n    const data_url = 'https://avdeevaelena.github.io/json/music.json';\n    const rowsTitle = [];\n    const rowsId = [];\n    const rowsImgUrl = [];\n    const rowsAll = [];\n    axios.get(data_url).then(function (response) {\n      const dataMusic = response.data;\n\n      for (let i = 0; i < dataMusic.length; i += 1) {\n        rowsId.push([dataMusic[i].id]);\n        rowsTitle.push([dataMusic[i].title]);\n        rowsImgUrl.push([dataMusic[i].url]);\n        rowsAll.push(dataMusic[i].title);\n      }\n\n      self.setState({\n        musicId: rowsId\n      });\n      self.setState({\n        musicTitle: rowsTitle\n      });\n      self.setState({\n        musicUrl: rowsImgUrl[0]\n      });\n      self.setState({\n        musicAll: rowsAll\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.state.currentSong, \"name song\");\n    console.log(this.state.currentSong == \"Campfire Story\", \"DidUpdate\");\n    console.log(this.state.currentSong == \"Chill Out\", 'Chill Out');\n\n    if (this.state.currentSong !== prevState.currentSong) {\n      let track;\n\n      switch (this.state.currentSong) {\n        case \"Campfire Story\":\n          track = goeasy;\n          break;\n\n        case \"Dreams\":\n          track = dreams;\n          break;\n\n        case \"Chill Out\":\n          track = chillout;\n          break;\n\n        case \"Twistter\":\n          track = twistter;\n          break;\n\n        case \"Free Bird\":\n          track = freebird;\n          break;\n\n        default:\n          break;\n      }\n\n      if (track) {\n        this.music.src = track;\n        this.music.play();\n        this.setState({\n          music: \"playing\"\n        });\n      }\n    }\n\n    if (this.state.music !== prevState.music) {\n      if (this.state.music === \"paused\") {\n        this.music.pause();\n      }\n\n      if (this.state.music === \"playing\" && prevState.music === \"paused\") {\n        this.music.play();\n      }\n\n      if (this.state.music === \"stop\") {\n        this.music.pause();\n        this.currentTime = 0;\n        this.setState({\n          currentSong: null\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.music.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n    this.requestData();\n  }\n\n  componentWillUnmount() {\n    this.music.removeEventListener(\"timeupdate\", () => {});\n  }\n\n  render() {\n    const currentTime = getTime(this.state.currentTime);\n    const duration = getTime(this.state.duration);\n    const songTitle = this.state.musicTitle;\n    const songId = this.state.musicId;\n    const songImg = this.state.musicUrl;\n    const playList = this.state.musicTitle;\n    const playList2 = this.state.musicTitle;\n    const item = null;\n    console.log(playList, \"playList\"); //  console.log (playList.length, \"playList2\");\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"React Music Player\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \" songTitle \", songTitle), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui card main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, this.state.music === \"playing\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }\n    }, \"Now Playing \", this.state.currentSong) : null, this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, this.state.currentSong, \" is paused\", \" \") : null, this.state.music === \"playing\" || this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }, currentTime, \" / \", duration) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, this.state.music === \"paused\" && /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon red button\",\n      onClick: () => this.setState({\n        music: \"playing\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \" large play circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }), \"Play\"), this.state.music === \"playing\" && /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon red button\",\n      onClick: () => this.setState({\n        music: \"paused\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"large pause circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }), \"Pause\"), this.state.music === \"playing\" || this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon button\",\n      onClick: () => this.setState({\n        music: \"stop\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"large stop circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }), \"Stop\") : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, playList), /*#__PURE__*/React.createElement(\"audio\", {\n      ref: ref => this.music = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}\n\nexport default MusicList;","map":{"version":3,"sources":["C:/Users/User/ReactMusic/reactmusic/src/companents/MusicList.jsx"],"names":["React","axios","s","goeasy","dreams","chillout","twistter","freebird","getTime","time","isNaN","Math","floor","slice","MusicList","Component","state","currentSong","music","currentTime","duration","requestData","self","data_url","rowsTitle","rowsId","rowsImgUrl","rowsAll","get","then","response","dataMusic","data","i","length","push","id","title","url","setState","musicId","musicTitle","musicUrl","musicAll","catch","error","console","log","finally","componentDidUpdate","prevProps","prevState","track","src","play","pause","componentDidMount","addEventListener","e","target","componentWillUnmount","removeEventListener","render","songTitle","songId","songImg","playList","playList2","item","ref"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport s from './styles.css';\r\n\r\nconst goeasy = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\";\r\nconst dreams = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3\";\r\nconst chillout =\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-10.mp3\";\r\nconst twistter =\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-13.mp3\";\r\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\r\n\r\nfunction getTime(time) {\r\n  if (!isNaN(time)) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n  \r\n  class MusicList extends React.Component {\r\n    state = {\r\n        currentSong: null,\r\n        music: \"stopped\",\r\n        currentTime: null,\r\n        duration: null\r\n      };\r\n\r\n    requestData(){\r\n        const self = this;\r\n        const data_url = 'https://avdeevaelena.github.io/json/music.json';\r\n        const rowsTitle= [];\r\n        const rowsId= [];\r\n        const rowsImgUrl= [];\r\n        const rowsAll= [];\r\n        axios.get(data_url)\r\n                .then(function (response) {\r\n                        const dataMusic=response.data;\r\n                    for (let i = 0; i < dataMusic.length; i += 1) {\r\n                        rowsId.push([dataMusic[i].id] );\r\n                        rowsTitle.push([dataMusic[i].title] );\r\n                        rowsImgUrl.push([dataMusic[i].url] );\r\n                        rowsAll.push(dataMusic[i].title );\r\n                \r\n             }\r\n                    self.setState({musicId: rowsId});\r\n                    self.setState({musicTitle: rowsTitle});\r\n                    self.setState({musicUrl: rowsImgUrl[0]});\r\n                    self.setState({musicAll: rowsAll});\r\n                })\r\n                .catch(function (error) { \r\n                    console.log(error);\r\n                })\r\n                .finally(function () {     \r\n                });     \r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        console.log (this.state.currentSong, \"name song\");\r\n        console.log (this.state.currentSong ==\"Campfire Story\", \"DidUpdate\");\r\n        console.log (this.state.currentSong ==\"Chill Out\", 'Chill Out');\r\n\r\n\r\n\r\n        if (this.state.currentSong !== prevState.currentSong) {\r\n          let track;\r\n          switch (this.state.currentSong) {\r\n            case \"Campfire Story\":\r\n              track = goeasy;\r\n              break;\r\n            case \"Dreams\":\r\n              track = dreams;\r\n              break;\r\n            case \"Chill Out\":\r\n              track = chillout;\r\n              break;\r\n            case \"Twistter\":\r\n              track = twistter;\r\n              break;\r\n            case \"Free Bird\":\r\n              track = freebird;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    \r\n          if (track) {\r\n            this.music.src = track;\r\n            this.music.play();\r\n            this.setState({\r\n              music: \"playing\"\r\n            });\r\n          }\r\n        }\r\n    \r\n        if (this.state.music !== prevState.music) {\r\n          if (this.state.music === \"paused\") {\r\n            this.music.pause();\r\n          }\r\n          if (this.state.music === \"playing\" && prevState.music === \"paused\") {\r\n            this.music.play();\r\n          }\r\n          if (this.state.music === \"stop\") {\r\n            this.music.pause();\r\n            this.currentTime = 0;\r\n            this.setState({\r\n              currentSong: null\r\n            });\r\n          }\r\n        }\r\n      }\r\n    \r\n      componentDidMount() {\r\n\r\n        this.music.addEventListener(\"timeupdate\", e => {\r\n          this.setState({\r\n            currentTime: e.target.currentTime,\r\n            duration: e.target.duration\r\n          });\r\n        });\r\n\r\n        this.requestData();    \r\n\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        this.music.removeEventListener(\"timeupdate\", () => {});\r\n      }\r\n\r\n    render() {\r\n        const currentTime = getTime(this.state.currentTime);\r\n        const duration = getTime(this.state.duration);\r\n        const songTitle = this.state.musicTitle;\r\n        const songId = this.state.musicId;\r\n        const songImg = this.state.musicUrl;\r\n        \r\n        const playList = this.state.musicTitle;\r\n        const playList2 = this.state.musicTitle;\r\n       \r\n        const item = null;\r\n        console.log (playList, \"playList\");\r\n      //  console.log (playList.length, \"playList2\");\r\n    \r\n        return (\r\n            <>\r\n              <h1 className=\"header\">React Music Player</h1>\r\n              <div className=\"playlist\"> songTitle {songTitle}</div>\r\n             \r\n          \r\n              <div className=\"App\">\r\n                <div className=\"ui card main-container\">\r\n                  <div className=\"info-container\">\r\n                    {this.state.music === \"playing\" ? (\r\n                      <div className=\"current-song\">\r\n                        Now Playing {this.state.currentSong}\r\n                      </div>\r\n                    ) : null}\r\n                    {this.state.music === \"paused\" ? (\r\n                      <div className=\"current-song\">\r\n                        {this.state.currentSong} is paused{\" \"}\r\n                      </div>\r\n                    ) : null}\r\n                    {this.state.music === \"playing\" ||\r\n                    this.state.music === \"paused\" ? (\r\n                      <div>\r\n                        {currentTime} / {duration}\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                  <div className=\"button-container\">\r\n                    {this.state.music === \"paused\" && (\r\n                      <button\r\n                        class=\"ui labeled icon red button\"\r\n                        onClick={() => this.setState({ music: \"playing\" })}\r\n                      >\r\n                        <i class=\" large play circle outline icon\" />\r\n                        Play\r\n                      </button>\r\n                    )}\r\n                    {this.state.music === \"playing\" && (\r\n                      <button\r\n                        class=\"ui labeled icon red button\"\r\n                        onClick={() => this.setState({ music: \"paused\" })}\r\n                      >\r\n                        <i class=\"large pause circle outline icon\" />\r\n                        Pause\r\n                      </button>\r\n                    )}\r\n                    {this.state.music === \"playing\" ||\r\n                    this.state.music === \"paused\" ? (\r\n                      <button\r\n                        class=\"ui labeled icon button\"\r\n                        onClick={() => this.setState({ music: \"stop\" })}\r\n                      >\r\n                        <i class=\"large stop circle outline icon\" />\r\n                        Stop\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n      \r\n                  <div className=\"playlist\">{playList}</div>\r\n      \r\n                  <audio ref={ref => (this.music = ref)} />\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        }\r\n    }\r\n\r\nexport default MusicList;\r\n"]},"metadata":{},"sourceType":"module"}