{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\ReactMusic\\\\reactmusic\\\\src\\\\companents\\\\MusicPlayer.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport s from './styles.css';\nconst goeasy = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\";\nconst dreams = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3\";\nconst chillout = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-10.mp3\";\nconst twistter = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-13.mp3\";\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\n\nfunction getTime(time) {\n  if (!isNaN(time)) {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }\n}\n\nclass MusicPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this._isMounted = false;\n    this.state = {\n      value: \"\",\n      currentSong: null,\n      music: \"stopped\",\n      currentTime: null,\n      duration: null\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('componentWillReceiveProps real song', nextProps.song);\n    console.log('componentWillReceiveProps value pass', this.props.song);\n    console.log('componentWillReceiveProps status music', this.props.music);\n    this.state.currentSong = nextProps.song;\n    this.state.music = nextProps.music;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate  ', this.state.currentSong);\n    console.log('prevState.currentSong  ', prevState.currentSong);\n\n    if (this.state.currentSong !== prevState.currentSong) {\n      let track;\n\n      switch (this.state.currentSong) {\n        case \"Go Easy\":\n          track = goeasy;\n          break;\n\n        case \"Dreams\":\n          track = dreams;\n          break;\n\n        case \"Chill Out\":\n          track = chillout;\n          break;\n\n        case \"Twistter\":\n          track = twistter;\n          break;\n\n        case \"Trust you\":\n          track = freebird;\n          break;\n\n        default:\n          break;\n      }\n\n      if (track) {\n        this.music.src = track;\n        this.music.play();\n        this.setState({\n          music: \"playing\"\n        });\n        console.log('track  ', this.state.music);\n      }\n    }\n\n    if (this.state.music !== prevState.music) {\n      if (this.state.music === \"paused\") {\n        this.music.pause();\n      }\n\n      if (this.state.music === \"playing\" && prevState.music === \"paused\") {\n        this.music.play();\n      }\n\n      if (this.state.music === \"stop\") {\n        this.music.pause();\n        this.currentTime = 0;\n        this.setState({\n          currentSong: null\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.music.removeEventListener(\"timeupdate\", () => {});\n  }\n\n  render() {\n    const currentTime = getTime(this.state.currentTime);\n    const duration = getTime(this.state.duration);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"React Music Player\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui card main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, this.state.music === \"playing\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    }, \"Now Playing \", this.state.currentSong) : null, this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 23\n      }\n    }, this.state.currentSong, \" is paused\", \" \") : null, this.state.music === \"playing\" || this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    }, currentTime, \" / \", duration) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, this.state.music === \"paused\" && /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon red button\",\n      onClick: () => this.setState({\n        music: \"playing\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \" large play circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }), \"Play\"), this.state.music === \"playing\" && /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon red button\",\n      onClick: () => this.setState({\n        music: \"paused\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"large pause circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }), \"Pause\"), this.state.music === \"playing\" || this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon button\",\n      onClick: () => this.setState({\n        music: \"stop\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"large stop circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }), \"Stop\") : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, playlist), /*#__PURE__*/React.createElement(\"audio\", {\n      ref: ref => this.music = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}\n\nexport default MusicPlayer;","map":{"version":3,"sources":["C:/Users/User/ReactMusic/reactmusic/src/companents/MusicPlayer.jsx"],"names":["React","axios","s","goeasy","dreams","chillout","twistter","freebird","getTime","time","isNaN","Math","floor","slice","MusicPlayer","Component","constructor","props","_isMounted","state","value","currentSong","music","currentTime","duration","componentWillReceiveProps","nextProps","console","log","song","componentDidUpdate","prevProps","prevState","track","src","play","setState","pause","componentWillUnmount","removeEventListener","render","playlist","ref"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport s from './styles.css';\r\n\r\nconst goeasy = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\";\r\nconst dreams = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3\";\r\nconst chillout =\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-10.mp3\";\r\nconst twistter =\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-13.mp3\";\r\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\r\n\r\nfunction getTime(time) {\r\n  if (!isNaN(time)) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n  \r\n  class MusicPlayer extends React.Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n       \r\n        super(props);\r\n        this._isMounted = false;\r\n        this.state = { value: \"\",\r\n                        currentSong: null,\r\n                        music: \"stopped\",\r\n                        currentTime: null,\r\n                        duration: null\r\n        };\r\n      }\r\n\r\n\r\n      componentWillReceiveProps(nextProps) {\r\n        console.log('componentWillReceiveProps real song', nextProps.song); \r\n        console.log('componentWillReceiveProps value pass', this.props.song);  \r\n        console.log('componentWillReceiveProps status music', this.props.music); \r\n\r\n        this.state.currentSong = nextProps.song;\r\n        this.state.music = nextProps.music;\r\n    }  \r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n\r\n        console.log('componentDidUpdate  ', this.state.currentSong ); \r\n        console.log('prevState.currentSong  ', prevState.currentSong ); \r\n       \r\n        if (this.state.currentSong !== prevState.currentSong) {\r\n          let track;\r\n          switch (this.state.currentSong) {\r\n            case \"Go Easy\":\r\n              track = goeasy;\r\n              break;\r\n            case \"Dreams\":\r\n              track = dreams;\r\n              break;\r\n            case \"Chill Out\":\r\n              track = chillout;\r\n              break;\r\n            case \"Twistter\":\r\n              track = twistter;\r\n              break;\r\n            case \"Trust you\":\r\n              track = freebird;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    \r\n          if (track) {\r\n            this.music.src = track;\r\n            this.music.play();\r\n            this.setState({\r\n              music: \"playing\"\r\n            });\r\n            console.log('track  ', this.state.music ); \r\n          }\r\n     \r\n        }\r\n    \r\n        if (this.state.music !== prevState.music) {\r\n          if (this.state.music === \"paused\") {\r\n            this.music.pause();\r\n          }\r\n          if (this.state.music === \"playing\" && prevState.music === \"paused\") {\r\n            this.music.play();\r\n          }\r\n          if (this.state.music === \"stop\") {\r\n            this.music.pause();\r\n            this.currentTime = 0;\r\n            this.setState({\r\n              currentSong: null\r\n            });\r\n          }\r\n        }\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        this._isMounted = false;\r\n        this.music.removeEventListener(\"timeupdate\", () => {});\r\n      }\r\n      \r\n\r\n\r\n\r\n\r\n       render() {\r\n        const currentTime = getTime(this.state.currentTime);\r\n        const duration = getTime(this.state.duration)\r\n     \r\n        return (\r\n            <>\r\n              <h1 className=\"header\">React Music Player</h1>\r\n              <div className=\"App\">\r\n                <div className=\"ui card main-container\">\r\n                  <div className=\"info-container\">\r\n                    {this.state.music === \"playing\" ? (\r\n                      <div className=\"current-song\">\r\n                        Now Playing {this.state.currentSong}\r\n                      </div>\r\n                    ) : null}\r\n                    {this.state.music === \"paused\" ? (\r\n                      <div className=\"current-song\">\r\n                        {this.state.currentSong} is paused{\" \"}\r\n                      </div>\r\n                    ) : null}\r\n                    {this.state.music === \"playing\" ||\r\n                    this.state.music === \"paused\" ? (\r\n                      <div>\r\n                        {currentTime} / {duration}\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                  <div className=\"button-container\">\r\n                    {this.state.music === \"paused\" && (\r\n                      <button\r\n                        class=\"ui labeled icon red button\"\r\n                        onClick={() => this.setState({ music: \"playing\" })}\r\n                      >\r\n                        <i class=\" large play circle outline icon\" />\r\n                        Play\r\n                      </button>\r\n                    )}\r\n                    {this.state.music === \"playing\" && (\r\n                      <button\r\n                        class=\"ui labeled icon red button\"\r\n                        onClick={() => this.setState({ music: \"paused\" })}\r\n                      >\r\n                        <i class=\"large pause circle outline icon\" />\r\n                        Pause\r\n                      </button>\r\n                    )}\r\n                    {this.state.music === \"playing\" ||\r\n                    this.state.music === \"paused\" ? (\r\n                      <button\r\n                        class=\"ui labeled icon button\"\r\n                        onClick={() => this.setState({ music: \"stop\" })}\r\n                      >\r\n                        <i class=\"large stop circle outline icon\" />\r\n                        Stop\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n      \r\n                  <div className=\"playlist\">{playlist}</div>\r\n      \r\n                  <audio ref={ref => (this.music = ref)} />\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n    }\r\n}\r\nexport default MusicPlayer;"]},"metadata":{},"sourceType":"module"}