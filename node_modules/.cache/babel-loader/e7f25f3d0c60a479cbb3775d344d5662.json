{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\ReactMusic\\\\reactmusic\\\\src\\\\companents\\\\MusicPlayer.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport s from './styles.css';\nconst goeasy = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\";\nconst dreams = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3\";\nconst chillout = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-10.mp3\";\nconst twistter = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-13.mp3\";\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\nlet audio = new Audio(\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\");\n\nfunction getTime(time) {\n  if (!isNaN(time)) {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }\n}\n\nclass MusicPlayer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentSong: null,\n      music: \"stopped\",\n      currentTime: null,\n      duration: null\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('next props', nextProps.song);\n    console.log('value pass', this.props.song);\n    this.setState({\n      currentSong: nextProps.song\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentSong !== prevState.currentSong) {\n      let track;\n\n      switch (this.state.currentSong) {\n        case \"Go Easy\":\n          track = goeasy;\n          break;\n\n        case \"Dreams\":\n          track = dreams;\n          break;\n\n        case \"Chill Out\":\n          track = chillout;\n          break;\n\n        case \"Twistter\":\n          track = twistter;\n          break;\n\n        case \"Free Bird\":\n          track = freebird;\n          break;\n\n        default:\n          break;\n      }\n\n      if (track) {\n        this.musicPlay.src = track;\n        console.log('state.music src after', this.musicPlay.src);\n        this.musicPlay.play();\n        this.setState({\n          music: \"playing\"\n        });\n      }\n    }\n\n    if (this.state.music !== prevState.music) {\n      if (this.state.music === \"paused\") {\n        this.musicPlay.pause();\n      }\n\n      if (this.state.music === \"playing\" && prevState.music === \"paused\") {\n        this.musicPlay.play();\n      }\n\n      if (this.state.music === \"stop\") {\n        this.musicPlay.pause();\n        this.currentTime = 0;\n        this.setState({\n          currentSong: null\n        });\n      }\n    }\n  }\n\n  render() {\n    const currentTime = getTime(this.state.currentTime);\n    const duration = getTime(this.state.duration);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"React Music Player\"), /*#__PURE__*/React.createElement(\"audio\", {\n      ref: ref => this.musicPlay = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui card main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, this.state.music === \"playing\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"Now Playing \", this.state.currentSong) : null, this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, this.state.currentSong, \" is paused\", \" \") : null, this.state.music === \"playing\" || this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, currentTime, \" / \", duration) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, this.state.music === \"paused\" && /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon red button\",\n      onClick: () => this.setState({\n        music: \"playing\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \" large play circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }), \"Play\"), this.state.music === \"playing\" && /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon red button\",\n      onClick: () => this.setState({\n        music: \"paused\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"large pause circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }), \"Pause\"), this.state.music === \"playing\" || this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon button\",\n      onClick: () => this.setState({\n        music: \"stop\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"large stop circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }), \"Stop\") : null))));\n  }\n\n  componentDidMount() {\n    this.musicPlay.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.music.removeEventListener(\"timeupdate\", () => {});\n  }\n\n}\n\nexport default MusicPlayer;","map":{"version":3,"sources":["C:/Users/User/ReactMusic/reactmusic/src/companents/MusicPlayer.jsx"],"names":["React","axios","s","goeasy","dreams","chillout","twistter","freebird","audio","Audio","getTime","time","isNaN","Math","floor","slice","MusicPlayer","Component","state","currentSong","music","currentTime","duration","componentWillReceiveProps","nextProps","console","log","song","props","setState","componentDidUpdate","prevProps","prevState","track","musicPlay","src","play","pause","render","ref","componentDidMount","addEventListener","e","target","componentWillUnmount","removeEventListener"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport s from './styles.css';\r\n\r\n\r\n\r\nconst goeasy = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\";\r\nconst dreams = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3\";\r\nconst chillout =\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-10.mp3\";\r\nconst twistter =\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-13.mp3\";\r\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\r\n\r\n\r\nlet audio = new Audio(\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\");\r\n\r\nfunction getTime(time) {\r\n  if (!isNaN(time)) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n  \r\n  class MusicPlayer extends React.Component {\r\n    state = {\r\n        currentSong: null,\r\n        music: \"stopped\",\r\n        currentTime: null,\r\n        duration: null\r\n      };  \r\n\r\n\r\n      componentWillReceiveProps(nextProps) {\r\n        console.log('next props', nextProps.song); \r\n        console.log('value pass', this.props.song);  \r\n  \r\n        this.setState({\r\n            currentSong: nextProps.song\r\n          });\r\n      \r\n    }  \r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.currentSong !== prevState.currentSong) {\r\n          let track;\r\n          switch (this.state.currentSong) {\r\n            case \"Go Easy\":\r\n              track = goeasy;\r\n              break;\r\n            case \"Dreams\":\r\n              track = dreams;\r\n              break;\r\n            case \"Chill Out\":\r\n              track = chillout;\r\n              break;\r\n            case \"Twistter\":\r\n              track = twistter;\r\n              break;\r\n            case \"Free Bird\":\r\n              track = freebird;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    \r\n          if (track) {\r\n            \r\n            this.musicPlay.src = track;\r\n            console.log('state.music src after', this.musicPlay.src); \r\n            this.musicPlay.play();\r\n            this.setState({\r\n              music: \"playing\"\r\n            });\r\n          }\r\n        }\r\n    \r\n        if (this.state.music !== prevState.music) {\r\n          if (this.state.music === \"paused\") {\r\n            this.musicPlay.pause();\r\n          }\r\n          if (this.state.music === \"playing\" && prevState.music === \"paused\") {\r\n            this.musicPlay.play();\r\n          }\r\n          if (this.state.music === \"stop\") {\r\n            this.musicPlay.pause();\r\n            this.currentTime = 0;\r\n            this.setState({\r\n              currentSong: null\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      render() {\r\n        const currentTime = getTime(this.state.currentTime);\r\n        const duration = getTime(this.state.duration);\r\n     \r\n        return (\r\n          <>\r\n            <h1 className=\"header\">React Music Player</h1>\r\n          \r\n            <audio ref={ref => (this.musicPlay = ref)} />\r\n            <div className=\"App\">\r\n              <div className=\"ui card main-container\">\r\n                <div className=\"info-container\">\r\n                  {this.state.music === \"playing\" ? (\r\n                    <div className=\"current-song\">\r\n                      Now Playing {this.state.currentSong}\r\n                    </div>\r\n                  ) : null}\r\n                  {this.state.music === \"paused\" ? (\r\n                    <div className=\"current-song\">\r\n                      {this.state.currentSong} is paused{\" \"}\r\n                    </div>\r\n                  ) : null}\r\n                  {this.state.music === \"playing\" ||\r\n                  this.state.music === \"paused\" ? (\r\n                    <div>\r\n                      {currentTime} / {duration}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                  {this.state.music === \"paused\" && (\r\n                    <button\r\n                      class=\"ui labeled icon red button\"\r\n                      onClick={() => this.setState({ music: \"playing\" })}\r\n                    >\r\n                      <i class=\" large play circle outline icon\" />\r\n                      Play\r\n                    </button>\r\n                  )}\r\n                  {this.state.music === \"playing\" && (\r\n                    <button\r\n                      class=\"ui labeled icon red button\"\r\n                      onClick={() => this.setState({ music: \"paused\" })}\r\n                    >\r\n                      <i class=\"large pause circle outline icon\" />\r\n                      Pause\r\n                    </button>\r\n                  )}\r\n                  {this.state.music === \"playing\" ||\r\n                  this.state.music === \"paused\" ? (\r\n                    <button\r\n                      class=\"ui labeled icon button\"\r\n                      onClick={() => this.setState({ music: \"stop\" })}\r\n                    >\r\n                      <i class=\"large stop circle outline icon\" />\r\n                      Stop\r\n                    </button>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n\r\n\r\n      componentDidMount() {\r\n        this.musicPlay.addEventListener(\"timeupdate\", e => {\r\n          this.setState({\r\n            currentTime: e.target.currentTime,\r\n            duration: e.target.duration\r\n          });\r\n        });\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        this.music.removeEventListener(\"timeupdate\", () => {});\r\n      }\r\n    \r\n}\r\nexport default MusicPlayer;"]},"metadata":{},"sourceType":"module"}