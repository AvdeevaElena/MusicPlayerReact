{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\ReactMusic\\\\reactmusic\\\\src\\\\companents\\\\MusicList.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport s from './styles.css';\nconst goeasy = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\";\nconst dreams = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3\";\nconst chillout = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-10.mp3\";\nconst twistter = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-13.mp3\";\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\n\nfunction getTime(time) {\n  if (!isNaN(time)) {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }\n}\n\nclass MusicList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      musicList: [],\n      currentSong: null,\n      music: \"stopped\",\n      currentTime: null,\n      duration: null\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentSong !== prevState.currentSong) {\n      let track;\n\n      switch (this.state.currentSong) {\n        case \"Go Easy\":\n          track = goeasy;\n          break;\n\n        case \"Dreams\":\n          track = dreams;\n          break;\n\n        case \"Chill Out\":\n          track = chillout;\n          break;\n\n        case \"Twistter\":\n          track = twistter;\n          break;\n\n        case \"Free Bird\":\n          track = freebird;\n          break;\n\n        default:\n          break;\n      }\n\n      if (track) {\n        this.music.src = track;\n        this.music.play();\n        this.setState({\n          music: \"playing\"\n        });\n      }\n    }\n\n    if (this.state.music !== prevState.music) {\n      if (this.state.music === \"paused\") {\n        this.music.pause();\n      }\n\n      if (this.state.music === \"playing\" && prevState.music === \"paused\") {\n        this.music.play();\n      }\n\n      if (this.state.music === \"stop\") {\n        this.music.pause();\n        this.currentTime = 0;\n        this.setState({\n          currentSong: null\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.music.removeEventListener(\"timeupdate\", () => {});\n  }\n\n  componentDidMount() {\n    axios.get(`https://avdeevaelena.github.io/json/music.json`).then(res => {\n      const musicList = res.data;\n      this.setState({\n        musicList\n      });\n    });\n    this.music.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n  }\n\n  render() {\n    const currentTime = getTime(this.state.currentTime);\n    const duration = getTime(this.state.duration);\n    const playlist = this.state.musicList.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"ui list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        class: \"ui avatar image\",\n        src: item.url,\n        alt: \"music images\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"title\",\n        key: item.id,\n        onClick: () => this.setState({\n          currentSong: item.title\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }, item.title))));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"React Music Player\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui card main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, this.state.music === \"playing\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Now Playing \", this.state.currentSong) : null, this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, this.state.currentSong, \" is paused\", \" \") : null, this.state.music === \"playing\" || this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, currentTime, \" / \", duration) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, this.state.music === \"paused\" && /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon red button\",\n      onClick: () => this.setState({\n        music: \"playing\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \" large play circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }), \"Play\"), this.state.music === \"playing\" && /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon red button\",\n      onClick: () => this.setState({\n        music: \"paused\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"large pause circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }), \"Pause\"), this.state.music === \"playing\" || this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon button\",\n      onClick: () => this.setState({\n        music: \"stop\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"large stop circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }), \"Stop\") : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, playlist), /*#__PURE__*/React.createElement(\"audio\", {\n      ref: ref => this.music = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default MusicList;","map":{"version":3,"sources":["C:/Users/User/ReactMusic/reactmusic/src/companents/MusicList.jsx"],"names":["React","axios","s","goeasy","dreams","chillout","twistter","freebird","getTime","time","isNaN","Math","floor","slice","MusicList","Component","state","musicList","currentSong","music","currentTime","duration","componentDidUpdate","prevProps","prevState","track","src","play","setState","pause","componentWillUnmount","removeEventListener","componentDidMount","get","then","res","data","addEventListener","e","target","render","playlist","map","item","url","id","title","ref"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport s from './styles.css';\r\n\r\nconst goeasy = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\";\r\nconst dreams = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3\";\r\nconst chillout =\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-10.mp3\";\r\nconst twistter =\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-13.mp3\";\r\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\r\n\r\nfunction getTime(time) {\r\n  if (!isNaN(time)) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n  \r\n  class MusicList extends React.Component {\r\n    state = {\r\n        musicList: [],\r\n        currentSong: null,\r\n        music: \"stopped\",\r\n        currentTime: null,\r\n        duration: null\r\n      };\r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.currentSong !== prevState.currentSong) {\r\n          let track;\r\n          switch (this.state.currentSong) {\r\n            case \"Go Easy\":\r\n              track = goeasy;\r\n              break;\r\n            case \"Dreams\":\r\n              track = dreams;\r\n              break;\r\n            case \"Chill Out\":\r\n              track = chillout;\r\n              break;\r\n            case \"Twistter\":\r\n              track = twistter;\r\n              break;\r\n            case \"Free Bird\":\r\n              track = freebird;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    \r\n          if (track) {\r\n            this.music.src = track;\r\n            this.music.play();\r\n            this.setState({\r\n              music: \"playing\"\r\n            });\r\n          }\r\n        }\r\n    \r\n        if (this.state.music !== prevState.music) {\r\n          if (this.state.music === \"paused\") {\r\n            this.music.pause();\r\n          }\r\n          if (this.state.music === \"playing\" && prevState.music === \"paused\") {\r\n            this.music.play();\r\n          }\r\n          if (this.state.music === \"stop\") {\r\n            this.music.pause();\r\n            this.currentTime = 0;\r\n            this.setState({\r\n              currentSong: null\r\n            });\r\n          }\r\n        }\r\n      }\r\n      componentWillUnmount() {\r\n        this.music.removeEventListener(\"timeupdate\", () => {});\r\n      }\r\n      componentDidMount() {\r\n      axios.get(`https://avdeevaelena.github.io/json/music.json`)\r\n      .then(res => {\r\n        const musicList = res.data;\r\n        this.setState({ musicList });\r\n      }) \r\n      this.music.addEventListener(\"timeupdate\", e => {\r\n        this.setState({\r\n          currentTime: e.target.currentTime,\r\n          duration: e.target.duration\r\n        });\r\n      });\r\n      }\r\n     \r\n       render() {\r\n        const currentTime = getTime(this.state.currentTime);\r\n        const duration = getTime(this.state.duration);\r\n        const playlist = this.state.musicList.map(item => {\r\n          return (\r\n            <div class=\"ui list\">\r\n              <div class=\"item\">\r\n                <img class=\"ui avatar image\" src={item.url} alt=\"music images\" />\r\n                <div class=\"content\">\r\n                  <li\r\n                    className=\"title\"\r\n                    key={item.id}\r\n                    onClick={() => this.setState({ currentSong: item.title })}\r\n                  >\r\n                    {item.title}\r\n                  </li>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n\r\n\r\n        return (\r\n<>\r\n        <h1 className=\"header\">React Music Player</h1>\r\n        <div className=\"App\">\r\n          <div className=\"ui card main-container\">\r\n            <div className=\"info-container\">\r\n              {this.state.music === \"playing\" ? (\r\n                <div className=\"current-song\">\r\n                  Now Playing {this.state.currentSong}\r\n                </div>\r\n              ) : null}\r\n              {this.state.music === \"paused\" ? (\r\n                <div className=\"current-song\">\r\n                  {this.state.currentSong} is paused{\" \"}\r\n                </div>\r\n              ) : null}\r\n              {this.state.music === \"playing\" ||\r\n              this.state.music === \"paused\" ? (\r\n                <div>\r\n                  {currentTime} / {duration}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div className=\"button-container\">\r\n              {this.state.music === \"paused\" && (\r\n                <button\r\n                  class=\"ui labeled icon red button\"\r\n                  onClick={() => this.setState({ music: \"playing\" })}\r\n                >\r\n                  <i class=\" large play circle outline icon\" />\r\n                  Play\r\n                </button>\r\n              )}\r\n              {this.state.music === \"playing\" && (\r\n                <button\r\n                  class=\"ui labeled icon red button\"\r\n                  onClick={() => this.setState({ music: \"paused\" })}\r\n                >\r\n                  <i class=\"large pause circle outline icon\" />\r\n                  Pause\r\n                </button>\r\n              )}\r\n              {this.state.music === \"playing\" ||\r\n              this.state.music === \"paused\" ? (\r\n                <button\r\n                  class=\"ui labeled icon button\"\r\n                  onClick={() => this.setState({ music: \"stop\" })}\r\n                >\r\n                  <i class=\"large stop circle outline icon\" />\r\n                  Stop\r\n                </button>\r\n              ) : null}\r\n            </div>\r\n            \r\n            <div className=\"playlist\">{playlist}</div>\r\n            <audio ref={ref => (this.music = ref)} />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default MusicList;\r\n"]},"metadata":{},"sourceType":"module"}