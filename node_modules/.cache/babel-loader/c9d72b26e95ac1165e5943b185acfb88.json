{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\ReactMusic\\\\reactmusic\\\\src\\\\companents\\\\MusicList.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport s from './styles.css';\nconst goeasy = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\";\nconst dreams = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3\";\nconst chillout = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-10.mp3\";\nconst twistter = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-13.mp3\";\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\n\nfunction getTime(time) {\n  if (!isNaN(time)) {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }\n}\n\nclass MusicList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [],\n      currentSong: null,\n      music: \"stopped\",\n      currentTime: null,\n      duration: null\n    };\n  }\n\n  requestData() {\n    const self = this;\n    const data_url = 'https://avdeevaelena.github.io/json/music.json';\n    axios.get(data_url)\n    /*  .then(res => {\r\n        const persons = res.data;\r\n        this.setState({ persons });\r\n       // self.setState({musicAll: persons});\r\n    })\r\n    .catch(function (error) { \r\n        console.log(error);\r\n    })\r\n    .finally(function () {     \r\n    });    \r\n    \r\n    */\n    .then(res => {\n      const persons = res.data.title;\n      this.setState({\n        persons\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.state.currentSong, \"name song\");\n    console.log(this.state.currentSong == \"Campfire Story\", \"DidUpdate\");\n    console.log(this.state.currentSong == \"Chill Out\", 'Chill Out');\n\n    if (this.state.currentSong !== prevState.currentSong) {\n      let track;\n\n      switch (this.state.currentSong) {\n        case \"Campfire Story\":\n          track = goeasy;\n          break;\n\n        case \"Dreams\":\n          track = dreams;\n          break;\n\n        case \"Chill Out\":\n          track = chillout;\n          break;\n\n        case \"Twistter\":\n          track = twistter;\n          break;\n\n        case \"Free Bird\":\n          track = freebird;\n          break;\n\n        default:\n          break;\n      }\n\n      if (track) {\n        this.music.src = track;\n        this.music.play();\n        this.setState({\n          music: \"playing\"\n        });\n      }\n    }\n\n    if (this.state.music !== prevState.music) {\n      if (this.state.music === \"paused\") {\n        this.music.pause();\n      }\n\n      if (this.state.music === \"playing\" && prevState.music === \"paused\") {\n        this.music.play();\n      }\n\n      if (this.state.music === \"stop\") {\n        this.music.pause();\n        this.currentTime = 0;\n        this.setState({\n          currentSong: null\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.music.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n    this.requestData();\n  }\n\n  componentWillUnmount() {\n    this.music.removeEventListener(\"timeupdate\", () => {});\n  }\n\n  render() {\n    const currentTime = getTime(this.state.currentTime);\n    const duration = getTime(this.state.duration);\n    const playListAll = this.state.persons;\n    const title = playListAll.map(person => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 50\n      }\n    }, person.title));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"React Music Player\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, playListAll), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, playListAll.map(person => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, person.title))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui card main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, this.state.music === \"playing\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"Now Playing \", this.state.currentSong) : null, this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, this.state.currentSong, \" is paused\", \" \") : null, this.state.music === \"playing\" || this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, currentTime, \" / \", duration) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, this.state.music === \"paused\" && /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon red button\",\n      onClick: () => this.setState({\n        music: \"playing\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \" large play circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 23\n      }\n    }), \"Play\"), this.state.music === \"playing\" && /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon red button\",\n      onClick: () => this.setState({\n        music: \"paused\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"large pause circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }), \"Pause\"), this.state.music === \"playing\" || this.state.music === \"paused\" ? /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui labeled icon button\",\n      onClick: () => this.setState({\n        music: \"stop\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"large stop circle outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 23\n      }\n    }), \"Stop\") : null), /*#__PURE__*/React.createElement(\"audio\", {\n      ref: ref => this.music = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nexport default MusicList;","map":{"version":3,"sources":["C:/Users/User/ReactMusic/reactmusic/src/companents/MusicList.jsx"],"names":["React","axios","s","goeasy","dreams","chillout","twistter","freebird","getTime","time","isNaN","Math","floor","slice","MusicList","Component","state","persons","currentSong","music","currentTime","duration","requestData","self","data_url","get","then","res","data","title","setState","componentDidUpdate","prevProps","prevState","console","log","track","src","play","pause","componentDidMount","addEventListener","e","target","componentWillUnmount","removeEventListener","render","playListAll","map","person","ref"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport s from './styles.css';\r\n\r\nconst goeasy = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\";\r\nconst dreams = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3\";\r\nconst chillout =\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-10.mp3\";\r\nconst twistter =\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-13.mp3\";\r\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\r\n\r\nfunction getTime(time) {\r\n  if (!isNaN(time)) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n  \r\n  class MusicList extends React.Component {\r\n    state = {\r\n        persons: [],\r\n        currentSong: null,\r\n        music: \"stopped\",\r\n        currentTime: null,\r\n        duration: null\r\n      };\r\n\r\n    requestData(){\r\n        const self = this;\r\n        const data_url = 'https://avdeevaelena.github.io/json/music.json';\r\n        axios.get(data_url )\r\n      /*  .then(res => {\r\n          const persons = res.data;\r\n          this.setState({ persons });\r\n         // self.setState({musicAll: persons});\r\n      })\r\n      .catch(function (error) { \r\n          console.log(error);\r\n      })\r\n      .finally(function () {     \r\n      });    \r\n      \r\n      */\r\n      \r\n      .then(res => {\r\n        const persons = res.data.title;\r\n        this.setState({ persons });\r\n      })\r\n\r\n   }\r\n  \r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        console.log (this.state.currentSong, \"name song\");\r\n        console.log (this.state.currentSong ==\"Campfire Story\", \"DidUpdate\");\r\n        console.log (this.state.currentSong ==\"Chill Out\", 'Chill Out');\r\n\r\n\r\n\r\n        if (this.state.currentSong !== prevState.currentSong) {\r\n          let track;\r\n          switch (this.state.currentSong) {\r\n            case \"Campfire Story\":\r\n              track = goeasy;\r\n              break;\r\n            case \"Dreams\":\r\n              track = dreams;\r\n              break;\r\n            case \"Chill Out\":\r\n              track = chillout;\r\n              break;\r\n            case \"Twistter\":\r\n              track = twistter;\r\n              break;\r\n            case \"Free Bird\":\r\n              track = freebird;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    \r\n          if (track) {\r\n            this.music.src = track;\r\n            this.music.play();\r\n            this.setState({\r\n              music: \"playing\"\r\n            });\r\n          }\r\n        }\r\n    \r\n        if (this.state.music !== prevState.music) {\r\n          if (this.state.music === \"paused\") {\r\n            this.music.pause();\r\n          }\r\n          if (this.state.music === \"playing\" && prevState.music === \"paused\") {\r\n            this.music.play();\r\n          }\r\n          if (this.state.music === \"stop\") {\r\n            this.music.pause();\r\n            this.currentTime = 0;\r\n            this.setState({\r\n              currentSong: null\r\n            });\r\n          }\r\n        }\r\n      }\r\n    \r\n      componentDidMount() {\r\n\r\n        this.music.addEventListener(\"timeupdate\", e => {\r\n          this.setState({\r\n            currentTime: e.target.currentTime,\r\n            duration: e.target.duration\r\n          });\r\n        });\r\n        this.requestData();    \r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        this.music.removeEventListener(\"timeupdate\", () => {});\r\n      }\r\n\r\n    render() {\r\n        const currentTime = getTime(this.state.currentTime);\r\n        const duration = getTime(this.state.duration);\r\n           \r\n        const playListAll = this.state.persons;\r\n       \r\n        const title =  playListAll.map(person => <li>{person.title}</li>);\r\n    \r\n        return (\r\n          <>\r\n            <h1 className=\"header\">React Music Player</h1>\r\n            <div className=\"playlist\">{playListAll}</div>\r\n            <ul>\r\n        { playListAll.map(person => <li>{person.title}</li>)}\r\n      </ul>\r\n\r\n            <div className=\"App\">\r\n              <div className=\"ui card main-container\">\r\n                <div className=\"info-container\">\r\n                  {this.state.music === \"playing\" ? (\r\n                    <div className=\"current-song\">\r\n                      Now Playing {this.state.currentSong}\r\n                    </div>\r\n                  ) : null}\r\n                  {this.state.music === \"paused\" ? (\r\n                    <div className=\"current-song\">\r\n                      {this.state.currentSong} is paused{\" \"}\r\n                    </div>\r\n                  ) : null}\r\n                  {this.state.music === \"playing\" ||\r\n                  this.state.music === \"paused\" ? (\r\n                    <div>\r\n                      {currentTime} / {duration}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                  {this.state.music === \"paused\" && (\r\n                    <button\r\n                      class=\"ui labeled icon red button\"\r\n                      onClick={() => this.setState({ music: \"playing\" })}\r\n                    >\r\n                      <i class=\" large play circle outline icon\" />\r\n                      Play\r\n                    </button>\r\n                  )}\r\n                  {this.state.music === \"playing\" && (\r\n                    <button\r\n                      class=\"ui labeled icon red button\"\r\n                      onClick={() => this.setState({ music: \"paused\" })}\r\n                    >\r\n                      <i class=\"large pause circle outline icon\" />\r\n                      Pause\r\n                    </button>\r\n                  )}\r\n                  {this.state.music === \"playing\" ||\r\n                  this.state.music === \"paused\" ? (\r\n                    <button\r\n                      class=\"ui labeled icon button\"\r\n                      onClick={() => this.setState({ music: \"stop\" })}\r\n                    >\r\n                      <i class=\"large stop circle outline icon\" />\r\n                      Stop\r\n                    </button>\r\n                  ) : null}\r\n                </div>\r\n    \r\n            \r\n    \r\n                <audio ref={ref => (this.music = ref)} />\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n                  }\r\n                }\r\n\r\nexport default MusicList;\r\n"]},"metadata":{},"sourceType":"module"}