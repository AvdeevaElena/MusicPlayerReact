{"version":3,"sources":["companents/musicFiles/Bo Kaspers Orkester - En sl ndas andetag.mp3","companents/musicFiles/Israel Kamakawiwoole - What A Wonderful World.mp3","companents/musicFiles/Madness Mdness - Our House.mp3","companents/musicFiles/Martin Fierro - Coplas Telúricas.mp3","companents/musicFiles/Rapossa - Burlesque.mp3","companents/musicFiles/Sufjan Stevens - Mystery of Love.mp3","companents/MusicPlayer.jsx","companents/MusicList2.jsx","App.js","serviceWorker.js","index.js","companents/MusicList2.module.css","companents/MusicPlayer.module.css"],"names":["module","exports","enslndasAdetag","require","whatAWonderfulWorld","ourHouse","coplasTelúricas","burlesque","mysteryOfLove","Audio","getTime","time","isNaN","Math","floor","slice","MusicPlayer","state","currentSong","music","currentTime","duration","nextProps","console","log","song","this","props","setState","prevProps","prevState","track","musicPlay","src","play","pause","ref","className","s","playerLayout","button","onClick","buttonTest","addEventListener","e","target","removeEventListener","React","Component","MusicList2","musicList","axios","get","then","res","data","playList","map","child","mus_pic","url","title","mus_title","key","id","header","h1","parent","status","footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.246eec27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bo Kaspers Orkester - En sl ndas andetag.736d7196.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Israel Kamakawiwoole - What A Wonderful World.2c065068.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Madness Mdness - Our House.e9339edd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Martin Fierro - Coplas Telúricas.f085a0f5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Rapossa - Burlesque.00dc1200.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Sufjan Stevens - Mystery of Love.d47a2cdf.mp3\";","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport s from './MusicPlayer.module.css';\r\n\r\nconst enslndasAdetag =require(\"./musicFiles/Bo Kaspers Orkester - En sl ndas andetag.mp3\");\r\nconst whatAWonderfulWorld =require(\"./musicFiles/Israel Kamakawiwoole - What A Wonderful World.mp3\");\r\nconst ourHouse =require(\"./musicFiles/Madness Mdness - Our House.mp3\");\r\nconst coplasTelúricas =require(\"./musicFiles/Martin Fierro - Coplas Telúricas.mp3\");\r\nconst burlesque =require(\"./musicFiles/Rapossa - Burlesque.mp3\");\r\nconst mysteryOfLove =require(\"./musicFiles/Sufjan Stevens - Mystery of Love.mp3\");\r\n\r\n\r\nconst freebird = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\";\r\n\r\n\r\nlet audio = new Audio(\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-15.mp3\");\r\n\r\nfunction getTime(time) {\r\n  if (!isNaN(time)) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n  \r\n  class MusicPlayer extends React.Component {\r\n    state = {\r\n        currentSong: null,\r\n        music: \"stopped\",\r\n        currentTime: null,\r\n        duration: null\r\n      };  \r\n\r\n\r\n      componentWillReceiveProps(nextProps) {\r\n        console.log('next props', nextProps.song); \r\n        console.log('value pass', this.props.song);  \r\n  \r\n        this.setState({\r\n            currentSong: nextProps.song\r\n          });\r\n      \r\n    }  \r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.currentSong !== prevState.currentSong) {\r\n          let track;\r\n          switch (this.state.currentSong) {\r\n            case \"Martin Fierro - Coplas Telúricas\":\r\n              track = coplasTelúricas;\r\n              break;\r\n            case \"Rapossa - Burlesque\":\r\n              track = burlesque;\r\n              break;\r\n            case \"Madness Madness - Our House\":\r\n              track = ourHouse;\r\n              break;\r\n            case \"Sufjan Stevens - Mystery of Love\":\r\n              track = mysteryOfLove;\r\n              break;\r\n            case \"Bo Kaspers Orkester - En sl ndas andetag\":\r\n              track = enslndasAdetag;\r\n              break;\r\n            case \"Israel Kamakawiwoole - What A Wonderful World\":\r\n              track = whatAWonderfulWorld;\r\n              break;  \r\n            default:\r\n              break;\r\n          }\r\n    \r\n          if (track) {\r\n            \r\n            this.musicPlay.src = track;\r\n            console.log('state.music src after', this.musicPlay.src); \r\n            this.musicPlay.play();\r\n            this.setState({\r\n              music: \"playing\"\r\n            });\r\n          }\r\n        }\r\n    \r\n        if (this.state.music !== prevState.music) {\r\n          if (this.state.music === \"paused\") {\r\n            this.musicPlay.pause();\r\n          }\r\n          if (this.state.music === \"playing\" && prevState.music === \"paused\") {\r\n            this.musicPlay.play();\r\n          }\r\n          if (this.state.music === \"stop\") {\r\n            this.musicPlay.pause();\r\n            this.currentTime = 0;\r\n            this.setState({\r\n              currentSong: null\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      render() {\r\n        const currentTime = getTime(this.state.currentTime);\r\n        const duration = getTime(this.state.duration);\r\n     \r\n        return (\r\n          <>\r\n            <audio ref={ref => (this.musicPlay = ref)} />\r\n              <div className = {s.playerLayout}>\r\n                <div>\r\n                  {this.state.music === \"playing\" ? (\r\n                    <div>\r\n                     {this.state.currentSong} is playing{\" \"}\r\n                    </div>\r\n                  ) : null}\r\n                  {this.state.music === \"paused\" ? (\r\n                    <div>\r\n                      {this.state.currentSong} is paused{\" \"}\r\n                    </div>\r\n                  ) : null}\r\n                  {this.state.music === \"playing\" ||\r\n                  this.state.music === \"paused\" ? (\r\n                    <div>\r\n                      {currentTime} / {duration}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div >\r\n                  {this.state.music === \"paused\" && (\r\n                    <button className = {s.button}\r\n                      onClick={() => this.setState({ music: \"playing\" })}\r\n                    >\r\n                      <i/>\r\n                      Play\r\n                    </button>\r\n                  )}\r\n                  {this.state.music === \"playing\" && (\r\n                    <button className = {s.buttonTest}\r\n                      onClick={() => this.setState({ music: \"paused\" })}\r\n                    >\r\n                      <i/>\r\n                      Pause\r\n                    </button>\r\n                  )}\r\n                  {this.state.music === \"playing\" ||\r\n                  this.state.music === \"paused\" ? (\r\n                    <button \r\n                      onClick={() => this.setState({ music: \"stop\" })}\r\n                    >\r\n                      <i/>\r\n                      Stop\r\n                    </button>\r\n                  ) : null}\r\n                </div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n\r\n\r\n      componentDidMount() {\r\n        this.musicPlay.addEventListener(\"timeupdate\", e => {\r\n          this.setState({\r\n            currentTime: e.target.currentTime,\r\n            duration: e.target.duration\r\n          });\r\n        });\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        this.music.removeEventListener(\"timeupdate\", () => {});\r\n      }\r\n    \r\n}\r\nexport default MusicPlayer;","import React from 'react';\r\nimport axios from 'axios';\r\nimport MusicPlayer from './MusicPlayer';\r\nimport { Card} from 'antd';\r\nimport s from './MusicList2.module.css';\r\n\r\n\r\n  class MusicList2 extends React.Component {\r\n    state = {\r\n        musicList: [],\r\n        currentSong: null,\r\n        music: \"stopped\"\r\n      };\r\n      componentDidMount() {\r\n      axios.get(`https://avdeevaelena.github.io/json/music3.json`)\r\n      .then(res => {\r\n        const musicList = res.data;\r\n        this.setState({ musicList });\r\n      }) \r\n      }\r\n\r\n       render() {    \r\n        const playList = this.state.musicList.map(song => {\r\n          return (\r\n              <div className={s.child}>\r\n                <img className={s.mus_pic} src={song.url} \r\n                 onClick={() => this.setState({ currentSong: song.title })}\r\n                />\r\n                  <Card\r\n                    className={s.mus_title}\r\n                    key={song.id}\r\n                    onClick={() => this.setState({ currentSong: song.title })}\r\n                     title={song.title} \r\n                    />    \r\n            </div>     \r\n          );\r\n        });\r\n        return (\r\n          <div>\r\n            <div className={s.header}>\r\n            <h1 className={s.h1}>MUSIC PLAYER </h1>   \r\n            </div>\r\n            <div className={s.parent}>\r\n            <div className=\"playlist\">   {playList}</div>\r\n            </div>\r\n             <MusicPlayer song={this.state.currentSong}\r\n                         status={this.state.music}\r\n            /> \r\n            <div className={s.footer}>\r\n                          made by React and me \r\n                    <p> avdeevaelena5@gmail.com  </p> \r\n            </div>\r\n          </div>\r\n        )\r\n  }\r\n}\r\nexport default MusicList2;","import React, { Component } from 'react';\nimport { HashRouter} from \"react-router-dom\";\nimport './App.css';\nimport MusicList2 from './companents/MusicList2';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>      \n           <div className = 'app-wrapper' >  \n           <div className = 'app-wrapper-content'>            \n           < MusicList2/>        \n           </div>\n    </div>\n      </HashRouter>\n    );\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mus_pic\":\"MusicList2_mus_pic__90hST\",\"mus_title\":\"MusicList2_mus_title__39WAJ\",\"parent\":\"MusicList2_parent__a5OhX\",\"child\":\"MusicList2_child__26AnZ\",\"header\":\"MusicList2_header__2QsmX\",\"h1\":\"MusicList2_h1__1vurK\",\"footer\":\"MusicList2_footer__SVRID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerLayout\":\"MusicPlayer_playerLayout__2l1CO\"};"],"sourceRoot":""}